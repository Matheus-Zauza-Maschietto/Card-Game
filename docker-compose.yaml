services:
  database:
    container_name: "card-game-database"
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports: 
      - 1433:1433
    environment:
      - ACCEPT_EULA=true
      - MSSQL_SA_PASSWORD=Senha123!
    networks:
      - "card-game"
  cache:
    container_name: card-game-cache
    image: redis:latest
    networks:
      - "card-game"
    ports:
      - "6379:6379"  
    restart: always

  backend:
    depends_on:
      - database
      - cache
    container_name: "card-game-backend"
    build: "."
    ports:
      - 8080:8080
    networks:
      - "card-game"
      - "broker-kafka"
    environment:
      - "ConnectionStrings__DatabaseDefaultConnection=Server=card-game-database;Database=master;User Id=sa;Password=Senha123!;MultipleActiveResultSets=true;Encrypt=YES;TrustServerCertificate=YES"
      - "ConnectionStrings__CacheDefaultConnection=card-game-cache"
    command: >
      sh -c "dotnet ef database update -p app --no-build &&
             dotnet run"
    
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9101:9101
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
       
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:29092"        
    networks:
      - broker-kafka

networks:
  card-game:
    driver: bridge
  broker-kafka:
    driver: bridge  

